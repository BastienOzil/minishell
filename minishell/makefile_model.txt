# Compiler and flags
 CC       = cc
 CFLAGS   = -Wall -Werror -Wextra
 
 # Colors for messages
 YELLOW = \033[1;33m
 GREEN = \033[1;32m
 RESET = \033[0m
 
 BOX_TOP    = ╔══════════════════════╗
 BOX_MIDDLE = ║                      ║
 BOX_BOTTOM = ╚══════════════════════╝
 
 # Directories
 SRC_DIR  = srcs
 OBJ_DIR  = objs
 LIBFT_DIR = libft
 
 # Libraries
 LIBFT    = $(LIBFT_DIR)/libft.a
 LIBS     = -L$(LIBFT_DIR) -lft -lreadline
 
 # Includes
 INCLUDES = -I$(LIBFT_DIR) -Iinclude
 
 # Source files and object files
 BUILTINS_DIR = $(SRC_DIR)/builtins/
 BUILTINS = builtins_utils redir_exec cd echo env exit export pwd unset\
     exec_utils redirect_utils
 
 PARSING_DIR = $(SRC_DIR)/parsing/
 PARSING = parse/parse parse/parse2 parse/parse3 expander/expander merger/merger
 
 UTILS_DIR = $(SRC_DIR)/utils/
 UTILS = utils show1 debugparsing free utils2
 
 RUNNING_DIR = $(SRC_DIR)/running/
 RUNNING = main
 
 # SRC_FILES+=$(addprefix $(BUILTINS_DIR),$(BUILTINS))
 SRC_FILES+=$(addprefix $(PARSING_DIR),$(PARSING))
 SRC_FILES+=$(addprefix $(UTILS_DIR),$(UTILS))
 SRC_FILES+=$(addprefix $(RUNNING_DIR),$(RUNNING))
 SRC_FILES+=$(addprefix $(BUILTINS_DIR),$(BUILTINS))
 
 SRCS        =   $(addprefix $(SRC_DIR), $(addsuffix .c, $(SRC_FILES)))
 OBJS        =   $(patsubst $(SRC_DIR)/%, $(OBJ_DIR)/%, $(addsuffix .o, $(SRC_FILES)))
 
 # Output executable
 NAME     = minishell
 
 # Rules
 all: $(LIBFT) $(NAME)
 
 # Compile libft if not already compiled
 $(LIBFT):
     @echo "$(YELLOW)Compiling my beautiful libft...$(RESET)"
     @$(MAKE) -C $(LIBFT_DIR) all > /dev/null
     @echo "$(GREEN)Compilation of libft finished.$(RESET)"
 
 # Create object directory if it doesn't exist
 $(OBJ_DIR):
     @mkdir -p $(OBJ_DIR)
 
 # Create subdirectories for object files
 $(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
     @mkdir -p $(dir $@)
     @$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@
 
 # Link the executable
 $(NAME): $(OBJS) $(LIBFT)
     @$(CC) $(CFLAGS) $(OBJS) $(LIBS) -o $(NAME)
     @echo "$(GREEN)$(BOX_TOP)"
     @echo "$(GREEN)║ Executable compiled. ║$(RESET)"
     @echo "$(GREEN)$(BOX_BOTTOM)$(RESET)"
 
 # Clean object files
 clean:
     @rm -rf $(OBJ_DIR)
     @echo "Clean done."
 
 # Clean object files and executable
 fclean: clean
     @rm -rf $(NAME)
     @echo "$(YELLOW)Cleaning libft...$(RESET)"
     @$(MAKE) -s -C $(LIBFT_DIR) fclean
     @echo "$(GREEN)Full clean done.$(RESET)"
 
 # Rebuild
 re: fclean all
 
 txt: fclean all
     @rm *.txt
 
 .PHONY: all clean fclean re
